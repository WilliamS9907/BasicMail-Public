<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BasicMail"
        xmlns:CustomFrameworkElements="clr-namespace:BasicMail.CustomFrameworkElements" 
        x:Class="BasicMail.MainWindow"
        mc:Ignorable="d"
        MinHeight="475"
        MinWidth="800"
        Loaded="Window_Loaded"
        Title="BasicMail" Height="475" Width="800">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisbility" />
    </Window.Resources>

    <Grid>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="Options">
                    <MenuItem Header="Email" IsEnabled="{Binding Path=IsAuthenticationInfoInUse}" Click="emailOptions_MenuItem_Click"/>
                    <MenuItem Header="Action Log" Click="actionLog_MenuItem_Click"/>
                </MenuItem>
            </Menu>
            <StackPanel>
            </StackPanel>
        </DockPanel>

        <Button x:Name="compose_button" Style="{StaticResource NoHighlight}" IsEnabled="{Binding Path=LoggedIn}" Click="compose_button_Click" VerticalAlignment="Top" HorizontalAlignment="Right" Width="120" Margin="0,21,15,0" Height="28">
            <Grid x:Name="compose_button_controlGrid" Height="{Binding ActualHeight, ElementName=compose_button}" Width="{Binding ActualWidth, ElementName=compose_button}">
                <Border x:Name="compose_button_highlightRect" Background="DarkGray" Opacity="0.0" CornerRadius="5" Margin="-1,-1,1,0"/>
                <TextBlock x:Name="compose_button_textBlock" Text="Compose" TextAlignment="Center" Foreground="Black" Margin="30,1,0,0" FontSize="17"/>
                <Image x:Name="compose_button_image" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" Source="/Images/ComposeIcon.png" Margin="-1,0,77,0"/>
            </Grid>
        </Button>

        <Button x:Name="refresh_button" Style="{StaticResource RefreshButton}" IsEnabled="{Binding Path=IsEmailSendingInUse}" Click="refresh_button_Click" VerticalAlignment="Top" HorizontalAlignment="Left" Width="24" Margin="101,21,0,0" Height="21">
            <Grid x:Name="refresh_button_controlGrid" Height="{Binding ActualHeight, ElementName=refresh_button}" Width="{Binding ActualWidth, ElementName=refresh_button}">
                <Border x:Name="refresh_button_highlightRect" Background="DarkGray" Opacity="0.0" CornerRadius="5"/>
                <Image x:Name="refresh_button_image" RenderOptions.BitmapScalingMode="HighQuality" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" Source="/Images/RefreshIcon.png">
                    <Image.RenderTransform>
                        <RotateTransform x:Name="refreshImageRotateTransform" Angle="0.0"/>
                    </Image.RenderTransform>
                </Image>
            </Grid>
        </Button>

        <ListBox x:Name="inbox_listBox" SelectionChanged="inbox_listBox_SelectionChanged" DisplayMemberPath="Subject" HorizontalAlignment="Left" d:ItemsSource="{d:SampleData ItemCount=5}" ItemsSource="{Binding Path=Emails}" Margin="5,44,0,10" Width="120" Height="auto"/>

        <TextBlock x:Name="mailHeader_textBlock" FontWeight="Bold" HorizontalAlignment="Left" Margin="131,49,0,0" TextWrapping="Wrap" d:Text="Header" Text="{Binding Path=Header}" VerticalAlignment="Top" Width="auto" Height="26" FontSize="17"/>

        <Grid x:Name="mailControls_grid" Margin="130,79,15,10">
            <Grid x:Name="conversation_grid" Margin="-5,0,0,95" >
                <ScrollViewer x:Name="conversationContents_scrollViewer">
                    <Grid x:Name="conversationContentsContainer_grid">
                        <CustomFrameworkElements:EmailContentBlock x:Name="emailContent_emailContentBlock" HorizontalAlignment="Left" Margin="0,0,0,0" Width="{Binding Path=ActualWidth, ElementName=conversationContentsContainer_grid}" Height="auto" VerticalAlignment="Top"/>
                    </Grid>
                </ScrollViewer>
            </Grid>

            <Button x:Name="reply_button" Style="{StaticResource RoundedNoHighlight}" IsEnabled="{Binding Path=IsEmailSendingInUse}" Click="reply_button_Click" HorizontalAlignment="Right" Margin="0,0,7,28" VerticalAlignment="Bottom" Height="30" Width="85">
                <Grid x:Name="reply_button_controlGrid" Height="{Binding ActualHeight, ElementName=reply_button}" Width="{Binding ActualWidth, ElementName=reply_button}">
                    <Border x:Name="reply_button_highlightRect" Background="DarkGray"  Opacity="0.0" CornerRadius="10" Margin="-1,-1,1,0"/>
                    <TextBlock x:Name="reply_button_textBlock" Text="Reply" FontSize="12" FontWeight="SemiBold" TextAlignment="Center" Foreground="Black" Margin="-1,5,1,0"/>
                </Grid>
            </Button>
            <CheckBox x:Name="replyToAll_checkBox" IsEnabled="{Binding Path=IsEmailSendingInUse}" Content="Reply To All" HorizontalAlignment="Right" Margin="0,0,9,11" VerticalAlignment="Bottom"/>
            <TextBox x:Name="sendReplyInput_textBox" TextWrapping="Wrap" IsEnabled="{Binding Path=IsEmailSendingInUse}" VerticalAlignment="Bottom" Margin="0,0,105,0" Height="70"/>
            <TextBlock x:Name="replyBodyWatermark_textBlock" Text="Body..." IsHitTestVisible="False" Opacity="0.75" Foreground="#FFA2A2A2" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontSize="15" FontWeight="Bold" Width="64" Margin="5,0,0,47">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=sendReplyInput_textBox}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Text, ElementName=sendReplyInput_textBox}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=sendReplyInput_textBox}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock x:Name="replyError_textBlock" HorizontalAlignment="Left" Margin="0,0,0,74" TextWrapping="Wrap" Text="{Binding Path=ReplyErrorMessage}" VerticalAlignment="Bottom" Width="550" Foreground="Red" FontSize="10"/>
        </Grid>

        <Border x:Name="composePanelOuter_border" Visibility="Hidden" HorizontalAlignment="Right" BorderThickness="2,2,2,0" CornerRadius="10,10,0,0" VerticalAlignment="Bottom" Height="325" Width="490" BorderBrush="#FF4A4A4A" Background="WhiteSmoke" Margin="0,0,15,0">
            <Grid  x:Name="composePanelInner_grid">
                <Border x:Name="composeTitleBar_border" Background="AliceBlue" VerticalAlignment="Top" CornerRadius="10,10,0,0" Height="28">
                    <Grid>
                        <Button x:Name="composeTitleBarClose_button" Style="{StaticResource ToolbarNoHighlight}" Click="composeTitleBarClose_button_Click" Margin="0,0,5,0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="22" Height="22">
                            <Grid x:Name="composeTitleBarClose_button_controlGrid" Height="{Binding ActualHeight, ElementName=composeTitleBarClose_button}" Width="{Binding ActualWidth, ElementName=composeTitleBarClose_button}">
                                <Border x:Name="composeTitleBarClose_button_highlightRect" Background="DarkGray" Opacity="0.0" CornerRadius="5" Margin="-1,-1,1,0"/>
                                <TextBlock x:Name="composeTitleBarClose_button_textBlock" FontWeight="Bold" Text="X" TextAlignment="Center" Foreground="Black" FontSize="17" Margin="0,-1,2,3" />
                                <Image x:Name="composeTitleBarClose_button_image" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" Source="/Images/ComposeIcon.png" Margin="-1,0,77,0"/>
                            </Grid>
                        </Button>

                        <Button x:Name="composeTitleBarMinimizeMaximize_button" Style="{StaticResource ToolbarNoHighlight}" Click="composeTitleBarMinimizeMaximize_button_Click" Margin="0,0,30,0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="22" Height="20">
                            <Grid x:Name="composeTitleBarMinimizeMaximize_button_controlGrid" Height="{Binding ActualHeight, ElementName=composeTitleBarMinimizeMaximize_button}" Width="{Binding ActualWidth, ElementName=composeTitleBarMinimizeMaximize_button}">
                                <Border x:Name="composeTitleBarMinimizeMaximize_button_highlightRect" Background="DarkGray" Opacity="0.0" CornerRadius="5" Margin="-1,-1,1,0"/>
                                <TextBlock x:Name="composeTitleBarMinimizeMaximize_button_textBlock" FontWeight="Bold" Text="-" TextAlignment="Center" Foreground="Black" FontSize="17" Margin="-1,-3,1,2" />
                                <Image x:Name="composeTitleBarMinimizeMaximize_button_image" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" Source="/Images/ComposeIcon.png" Margin="-1,0,77,0"/>
                            </Grid>
                        </Button>
                        <TextBlock x:Name="composeTitleBarHeader_textBlock" Width="400" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold" Text="{Binding Path=Text, ElementName=composeSubject_textBox}" Margin="10,5,0,0"/>
                    </Grid>
                </Border>

                <TextBox x:Name="composeTo_textBox" IsEnabled="{Binding Path=IsEmailSendingInUse}" TextWrapping="NoWrap" HorizontalAlignment="Left" Margin="4,33,0,0" VerticalAlignment="Top" Width="462"/>
                <TextBlock x:Name="composeToWatermark_textBlock" Text="To..." IsHitTestVisible="False" Opacity="0.75" Foreground="#FFA2A2A2" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" FontWeight="Bold" Width="64" Margin="7,34,0,0">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=composeTo_textBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text, ElementName=composeTo_textBox}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFocused, ElementName=composeTo_textBox}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBox x:Name="composeCc_textBox" IsEnabled="{Binding Path=IsEmailSendingInUse}" TextWrapping="NoWrap" HorizontalAlignment="Left" Margin="4,56,0,0" VerticalAlignment="Top" Width="462"/>
                <TextBlock x:Name="composeCcWatermark_textBlock" Text="Cc..." IsHitTestVisible="False" Opacity="0.75" Foreground="#FFA2A2A2" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" FontWeight="Bold" Width="64" Margin="7,57,0,0">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=composeCc_textBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text, ElementName=composeCc_textBox}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFocused, ElementName=composeCc_textBox}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBox x:Name="composeBcc_textBox" IsEnabled="{Binding Path=IsEmailSendingInUse}" TextWrapping="NoWrap" HorizontalAlignment="Left" Margin="4,79,0,0" Text="" VerticalAlignment="Top" Width="462"/>
                <TextBlock x:Name="composeBccWatermark_textBlock" Text="Bcc..." IsHitTestVisible="False" Opacity="0.75" Foreground="#FFA2A2A2" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" FontWeight="Bold" Width="64" Margin="7,80,0,0">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=composeBcc_textBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text, ElementName=composeBcc_textBox}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFocused, ElementName=composeBcc_textBox}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBox x:Name="composeSubject_textBox" IsEnabled="{Binding Path=IsEmailSendingInUse}" TextWrapping="NoWrap" HorizontalAlignment="Left" Margin="4,102,0,0" Text="" VerticalAlignment="Top" Width="462"/>
                <TextBlock x:Name="composeSubjectWatermark_textBlock" Text="Subject..." IsHitTestVisible="False" Opacity="0.75" Foreground="#FFA2A2A2" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" FontWeight="Bold" Width="64" Margin="7,103,0,0">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=composeSubject_textBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text, ElementName=composeSubject_textBox}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFocused, ElementName=composeSubject_textBox}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBox x:Name="composeBody_textBox" IsEnabled="{Binding Path=IsEmailSendingInUse}" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="0,125,0,0" Text="" VerticalAlignment="Top" Width="478" Height="148"/>
                <TextBlock x:Name="composeBodyWatermark_textBlock" Text="Body..." IsHitTestVisible="False" Opacity="0.75" Foreground="#FFA2A2A2" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="15" FontWeight="Bold" Width="64" Margin="7,123,0,0">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=composeBody_textBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text, ElementName=composeBody_textBox}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFocused, ElementName=composeBody_textBox}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBlock x:Name="composeError_textBlock" Text="{Binding Path=ComposeErrorMessage}" Margin="10,278,123,27" Foreground="Red" FontSize="10" />

                <Button x:Name="composeSend_button" Style="{StaticResource RoundedNoHighlight}" IsEnabled="{Binding Path=IsEmailSendingInUse}" Click="composeSend_button_Click" Margin="385,286,13,12">
                    <Grid x:Name="composeSend_button_controlGrid" Height="{Binding ActualHeight, ElementName=composeSend_button}" Width="{Binding ActualWidth, ElementName=composeSend_button}">
                        <Border x:Name="composeSend_button_highlightRect" Background="DarkGray"  Opacity="0.0" CornerRadius="10" Margin="-1,-1,1,0"/>
                        <TextBlock x:Name="composeSend_button_textBlock" Text="Send" FontSize="12" FontWeight="SemiBold" TextAlignment="Center" Foreground="Black" Margin="-1,3,1,0"/>
                    </Grid>
                </Button>
            </Grid>
        </Border>

        <Border x:Name="loginPanelOuter_border"  Visibility="{Binding Path=DisplayLoginPanel, Converter={StaticResource BooleanToVisbility}}" HorizontalAlignment="Center" BorderThickness="2" CornerRadius="10" VerticalAlignment="Center" Height="154" Width="370" BorderBrush="#FF4A4A4A" Background="WhiteSmoke">
            <Grid x:Name="loginPanelInner_grid">
                <TextBox x:Name="userName_textBox" PreviewKeyDown="userName_textBox_PreviewKeyDown" TextWrapping="NoWrap" Visibility="{Binding Path=DisplayLoginElements, Converter={StaticResource BooleanToVisbility}}" HorizontalAlignment="Center" Margin="0,28,0,0" Text="{Binding Path=Username}" VerticalAlignment="Top" Width="342"/>

                <PasswordBox x:Name="password_passwordBox" PreviewKeyDown="password_passwordBox_PreviewKeyDown" Visibility="{Binding Path=DisplayLoginElements, Converter={StaticResource BooleanToVisbility}}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="342"/>

                <Button x:Name="login_button" Style="{StaticResource RoundedNoHighlight}" Visibility="{Binding Path=DisplayLoginElements, Converter={StaticResource BooleanToVisbility}}" Click="login_button_Click" HorizontalAlignment="Center" Margin="0,107,0,0" VerticalAlignment="Top" Width="70" Height="38">
                    <Grid x:Name="login_button_controlGrid" Height="{Binding ActualHeight, ElementName=login_button}" Width="{Binding ActualWidth, ElementName=login_button}">
                        <Border x:Name="login_button_highlightRect" Background="DarkGray"  Opacity="0.0" CornerRadius="10" Margin="-1,-1,1,0"/>
                        <TextBlock x:Name="login_button_textBlock" Text="Login" FontSize="20" FontWeight="SemiBold" TextAlignment="Center" Foreground="Black" Margin="-1,3,1,0"/>
                    </Grid>
                </Button>

                <TextBlock x:Name="authenticationFeedback_textBlock" Visibility="{Binding Path=LoggingIn, Converter={StaticResource BooleanToVisbility}}" Text="{Binding Path=LoadingStatus}" HorizontalAlignment="center" Margin="0,0,0,0" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="25"/>
                <TextBlock x:Name="userName_textBlock" Visibility="{Binding Path=DisplayLoginElements, Converter={StaticResource BooleanToVisbility}}" HorizontalAlignment="Left" Margin="12,12,0,0" TextWrapping="Wrap" Text="Username (Email)" VerticalAlignment="Top"/>
                <TextBlock x:Name="password_textBlock" Visibility="{Binding Path=DisplayLoginElements, Converter={StaticResource BooleanToVisbility}}" HorizontalAlignment="Left" Margin="10,51,0,0" TextWrapping="Wrap" Text="Password" VerticalAlignment="Top" RenderTransformOrigin="0.626,0.722"/>
                <TextBlock x:Name="authError_textBlock" Visibility="{Binding Path=DisplayLoginElements, Converter={StaticResource BooleanToVisbility}}" HorizontalAlignment="Center" Margin="0,89,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="342" Foreground="Red" FontSize="10" TextAlignment="Center"/>
            </Grid>
        </Border>

        <TextBlock x:Name="inboxHeader_textBlock"   HorizontalAlignment="Left" Margin="5,23,0,0" TextWrapping="Wrap" Text="Inbox" VerticalAlignment="Top" FontSize="18" Height="21"/>
    </Grid>
</Window>
